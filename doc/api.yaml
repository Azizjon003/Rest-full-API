openapi: 3.0.0
info:
  title: Sample API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.1.9
servers:
  - url: http://localhost:8080
    description: Bu url localhostdagi server uchun
  - url: http://staging-api.example.com
    description: Bu url esa staging server uchun

components:
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT # optional, arbitrary value for documentation purposes
# 2) Apply the security globally to all operations
security:
  - bearerAuth: []

paths:
  /api/v1/users:
    get:
      tags:
        - users
      security:
        - bearerAuth: []
      summary: Hamma foydalanuvchilar ro'yhati.
      description: Hamma foydalanuvchilar ro'yhatini ko'rish faqat admin uchun.
      responses:
        "200": # status code
          description: A JSON array of usernames
          content:
            application/json:
              schema:
                type: object
  /api/v1/users/{id}:
    get:
      tags:
        - users
      security:
        - bearerAuth: []
      summary: Foydalanuvchi haqida ma'lumot.
      description: Foydalanuvchi haqida ma'lumotni ko'rish faqat admin uchun.
      parameters:
        - name: id
          in: path
          description: Foydalanuvchi ID si.
          required: true
          schema:
            type: string
      responses:
        "200": # status code
          description: A JSON array of usernames
          content:
            application/json:
              schema:
                type: object
  /api/v1/users/:
    post:
      tags:
        - users
      security:
        - bearerAuth: []
      summary: Foydalanuvchi yaratish.
      description: Foydalanuvchi yaratish faqat admin uchun.
      requestBody:
        description: Foydalanuvchi haqida ma'lumot.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                surname:
                  type: string
                email:
                  type: string
                jins:
                  type: string
                  enum:
                    - erkak
                    - ayol
      responses:
        "200": # status code
          description: Foydalanuvchi qaytadi.
          content:
            application/json:
              schema:
                type: object
  /api/v1/users/{id}/:
    patch:
      tags:
        - users
      security:
        - bearerAuth: []
      summary: Foydalanuvchi haqida ma'lumot.
      description: Foydalanuvchi haqida ma'lumotni o'zgartirish faqat admin uchun.
      parameters:
        - name: id
          in: path
          description: Foydalanuvchi ID si.
          required: true
          schema:
            type: string
      requestBody:
        description: Foydalanuvchi haqida ma'lumot.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                surname:
                  type: string
                email:
                  type: string
                password:
                  type: string

      responses:
        "200": # status code
          description: A JSON array of usernames
          content:
            application/json:
              schema:
                type: object
  /api/v1/users/{idcha}/:
    delete:
      tags:
        - users
      security:
        - bearerAuth: []
      summary: Foydalanuvchi haqida ma'lumot.
      description: Foydalanuvchi haqida ma'lumotni o'zgartirish faqat admin uchun.
      parameters:
        - name: idcha
          in: path
          description: Foydalanuvchi ID si.
          required: true
          schema:
            type: string
      responses:
        "200": # status code
          description: A JSON array of usernames
          content:
            application/json:
              schema:
                type: object

  /api/v1/products:
    get:
      tags:
        - Products
      summary: Hamma mahsulotlar ro'yhati.
      description: Hamma mahsulotlar ro'yhatini ko'rish faqat admin uchun.
      responses:
        "200": # status code
          description: A JSON array of usernames
          content:
            application/json:
              schema:
                type: object
  /api/v1/products/{id}:
    get:
      tags:
        - Products
      summary: Mahsulot haqida ma'lumot.
      description: Mahsulot haqida ma'lumotni ko'rish faqat admin uchun.
      parameters:
        - name: id
          in: path
          description: Mahsulot ID si.
          required: true
          schema:
            type: string
      responses:
        "200": # status code
          description: A JSON array of usernames
          content:
            application/json:
              schema:
                type: object
  /api/v1/products/{id}/:
    patch:
      tags:
        - Products
      security:
        - bearerAuth: []
      summary: Mahsulot haqida ma'lumot.
      description: Mahsulot haqida ma'lumotni o'zgartirish faqat admin uchun.
      parameters:
        - name: id
          in: path
          description: Mahsulot ID si.
          required: true
          schema:
            type: string
      requestBody:
        description: Mahsulot haqida ma'lumot.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: string
                image:
                  type: string
                category:
                  type: string
                quantity:
                  type: string
      responses:
        "200": # status code
          description: A JSON array of usernames
          content:
            application/json:
              schema:
                type: object
